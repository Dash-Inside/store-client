// Mocks generated by Mockito 5.4.2 from annotations
// in store_client/test/domain/library/search_topic_by_title_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:store_client/core/failure/failure.dart' as _i5;
import 'package:store_client/src/domain/entities/section.dart' as _i6;
import 'package:store_client/src/domain/entities/topic.dart' as _i7;
import 'package:store_client/src/domain/repository/library_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LibraryRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLibraryRepository extends _i1.Mock implements _i3.LibraryRepository {
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> addFavoriteTopic(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavoriteTopic,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #addFavoriteTopic,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
                _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #addFavoriteTopic,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> removeFavoriteTopic(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavoriteTopic,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #removeFavoriteTopic,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
                _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #removeFavoriteTopic,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> addTopic({
    required String? title,
    required String? data,
    required List<String>? links,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTopic,
          [],
          {
            #title: title,
            #data: data,
            #links: links,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #addTopic,
            [],
            {
              #title: title,
              #data: data,
              #links: links,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
                _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #addTopic,
            [],
            {
              #title: title,
              #data: data,
              #links: links,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Section>>> getAllSections() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllSections,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Section>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Section>>(
          this,
          Invocation.method(
            #getAllSections,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Section>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Section>>(
          this,
          Invocation.method(
            #getAllSections,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Section>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Topic>>> getAllTopicsBySectionID(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTopicsBySectionID,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, List<_i7.Topic>>>.value(
            _FakeEither_0<_i5.Failure, List<_i7.Topic>>(
          this,
          Invocation.method(
            #getAllTopicsBySectionID,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Topic>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Topic>>(
          this,
          Invocation.method(
            #getAllTopicsBySectionID,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Topic>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.Topic>> getTopicDataByID(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopicDataByID,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.Topic>>.value(
            _FakeEither_0<_i5.Failure, _i7.Topic>(
          this,
          Invocation.method(
            #getTopicDataByID,
            [],
            {#id: id},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i7.Topic>>.value(
                _FakeEither_0<_i5.Failure, _i7.Topic>(
          this,
          Invocation.method(
            #getTopicDataByID,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.Topic>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.Topic>> searchTopicByTitle(
          {required String? title}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTopicByTitle,
          [],
          {#title: title},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i7.Topic>>.value(
            _FakeEither_0<_i5.Failure, _i7.Topic>(
          this,
          Invocation.method(
            #searchTopicByTitle,
            [],
            {#title: title},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, _i7.Topic>>.value(
                _FakeEither_0<_i5.Failure, _i7.Topic>(
          this,
          Invocation.method(
            #searchTopicByTitle,
            [],
            {#title: title},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.Topic>>);
}
