// Mocks generated by Mockito 5.4.2 from annotations
// in store_client/test/domain/user_data/change_avatar_url_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:store_client/core/failure/failure.dart' as _i5;
import 'package:store_client/src/data/repositories/remote/user_data_server_repository.dart' as _i3;
import 'package:store_client/src/domain/entities/user_data.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserDataServerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDataServerRepository extends _i1.Mock implements _i3.UserDataServerRepository {
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>> loginUser({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>.value(_FakeEither_0<_i5.Failure, _i6.UserData>(
          this,
          Invocation.method(
            #loginUser,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>.value(_FakeEither_0<_i5.Failure, _i6.UserData>(
          this,
          Invocation.method(
            #loginUser,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>> restorePasswordUser({
    required String? restoreCode,
    required String? password,
    required String? comfirmedPassword,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorePasswordUser,
          [],
          {
            #restoreCode: restoreCode,
            #password: password,
            #comfirmedPassword: comfirmedPassword,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>.value(_FakeEither_0<_i5.Failure, _i6.UserData>(
          this,
          Invocation.method(
            #restorePasswordUser,
            [],
            {
              #restoreCode: restoreCode,
              #password: password,
              #comfirmedPassword: comfirmedPassword,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>.value(_FakeEither_0<_i5.Failure, _i6.UserData>(
          this,
          Invocation.method(
            #restorePasswordUser,
            [],
            {
              #restoreCode: restoreCode,
              #password: password,
              #comfirmedPassword: comfirmedPassword,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>> changeAvatarUrl({
    required _i6.UserData? userData,
    required String? newAvatarUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeAvatarUrl,
          [],
          {
            #userData: userData,
            #newAvatarUrl: newAvatarUrl,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>.value(_FakeEither_0<_i5.Failure, _i6.UserData>(
          this,
          Invocation.method(
            #changeAvatarUrl,
            [],
            {
              #userData: userData,
              #newAvatarUrl: newAvatarUrl,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>.value(_FakeEither_0<_i5.Failure, _i6.UserData>(
          this,
          Invocation.method(
            #changeAvatarUrl,
            [],
            {
              #userData: userData,
              #newAvatarUrl: newAvatarUrl,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>> changeUserName({
    required _i6.UserData? userData,
    required String? newUserName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeUserName,
          [],
          {
            #userData: userData,
            #newUserName: newUserName,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>.value(_FakeEither_0<_i5.Failure, _i6.UserData>(
          this,
          Invocation.method(
            #changeUserName,
            [],
            {
              #userData: userData,
              #newUserName: newUserName,
            },
          ),
        )),
        returnValueForMissingStub: _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>.value(_FakeEither_0<_i5.Failure, _i6.UserData>(
          this,
          Invocation.method(
            #changeUserName,
            [],
            {
              #userData: userData,
              #newUserName: newUserName,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserData>>);
}
